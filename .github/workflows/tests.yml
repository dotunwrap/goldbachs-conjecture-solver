# Much of this was referenced from the eza project's unit test workflow
name: Lint, Format, Test
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  check-if-pr:
    runs-on: ubuntu-latest
    outputs:
      is_pr: ${{ steps.check.outputs.is_pr }}
    steps:
      - name: Check if PR
        id: check
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "is_pr=true" >> $GITHUB_OUTPUT
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
          fi
  no-merge-commits:
    needs: check-if-pr
    if: ${{ needs.check-if-pr.outputs.is_pr == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Run check for merge commits
        uses: NexusPHP/no-merge-commits@v2.2.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  conventional-commits:
    needs:
      - check-if-pr
      - no-merge-commits
    name: Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0
  unit-tests:
    needs: conventional-commits
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hack
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: cargo install cargo-hack
      - name: Run rustfmt checks
        run: cargo fmt --check
      - name: Run clippy lints
        if: ${{ matrix.os != 'windows-latest' }}
        run: cargo clippy -- -D warnings
      - name: Run unit tests
        run: cargo hack test
